#ifndef PATTERNS_NXC
#define PATTERNS_NXC

#include "draw.nxc"
#include "pen.nxc"
#include "calibration.nxc"
#include "svg_parser.nxc"

sub plot_corners() {
  PrintSettings print_settings = get_print_settings();

  print_point(0, 0);
  print_point(0, print_settings.height - 1);
  print_point(print_settings.width - 1, print_settings.height - 1);
  print_point(print_settings.width - 1, 0);
}

sub plot_heart() {
  int xs[] = {3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 9, 8, 7, 6, 5, 4};
  int ys[] = {0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 1};
  plot_points(xs, ys);
}

void plot_heart_lines() {
  int xs[] = {2, 2, 1, 1, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5,  5,  6,  6,  7,  7,  8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 12, 12, 11, 11, 8, 8, 7, 7, 6, 6, 5, 5};
  int ys[] = {0, 1, 1, 2, 2, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 10, 10, 9, 9, 8,  8,  7,  7,  6,  6,  5,  5,  2,  2,  1,  1,  0, 0, 1, 1, 2, 2, 1, 1, 0};
  plot_pattern(xs, ys);
}

void plot_heart_curve() {
  goto_position(6.33634505505, 0.0);
  pen_down();
  curve_to(4.85460119849, 0.0, 4.35499605147, 1.31512170762, 4.35499605147, 1.31512170762);
  smooth_curve_to(3.85600060389, 0.0, 2.37364704789, 0.0);
  curve_to(0.892338690946, 0.0, 0.0, 1.41223811957, 0.0, 2.57624146421);
  curve_to_relative(0.0, 1.95068983137, 4.35499605147, 4.92375853579, 4.35499605147, 4.92375853579);
  smooth_curve_to_relative(4.35499605147, -2.97237190505, 4.35499605147, -4.92341013611);
  curve_to(8.70999210294, 1.41223811957, 7.8180889116, 0.0, 6.33634505505, 0.0);
  pen_up();
}

void plot_invader_lines() {
  int body_xs[] = {3, 2, 2, 3, 3, 3, 2, 2, 1, 1, 0, 0, 1, 1, 2, 2, 3, 3, 5, 5, 3, 3, 8, 8, 6, 6, 8, 8, 9, 9, 9, 10, 10, 11, 11, 10, 10, 9, 9, 8, 8, 9, 9, 7, 7, 4, 4};
  int body_ys[] = {1, 1, 0, 0, 1, 2, 2, 3, 3, 4, 4, 7, 7, 5, 5, 7, 7, 8, 8, 7, 7, 6, 6, 7, 7, 8, 8, 7, 7, 7, 5,  5,  7,  7,  4,  4,  3, 3, 2, 2, 0, 0, 1, 1, 2, 2, 1};

  plot_pattern(body_xs, body_ys);

  int left_eye_xs[] = {4, 4, 3, 3};
  int left_eye_ys[] = {4, 3, 3, 4};

  plot_pattern(left_eye_xs, left_eye_ys);

  int rigth_eye_xs[] = {8, 8, 7, 7};
  int right_eye_ys[] = {4, 3, 3, 4};

  plot_pattern(rigth_eye_xs, right_eye_ys);
}

sub plot_invader() {
  int xs[] = {0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9};
  int ys[] = {4, 5, 6, 3, 4, 0, 3, 4, 5, 6, 7, 1, 2, 4, 5, 7, 3, 4, 5, 6, 3, 4, 5, 6, 1, 2, 4, 5, 7, 0, 3, 4, 5, 6, 7, 4, 5, 6, 3, 4};
  plot_points(xs, ys);
}

void plot_ghost_lines() {
  int body_xs[] = {5, 5, 3, 3, 2, 2, 1, 1, 0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  7,  7,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 12, 12, 11, 11, 10, 10, 8, 8};
  int body_ys[] = {0, 1, 1, 2, 2, 3, 3, 6, 6, 14, 14, 13, 13, 12, 12, 13, 13, 14, 14, 12, 12, 14, 14, 13, 13, 12, 12, 13, 13, 14, 14,  6,  6,  3,  3,  2,  2,  1, 1, 0};
  plot_pattern(body_xs, body_ys);

  int left_eye_xs[] = {4, 4, 3, 3, 4, 4, 6, 6, 7, 7, 6, 6};
  int left_eye_ys[] = {3, 4, 4, 7, 7, 8, 8, 7, 7, 4, 4, 3};
  plot_pattern(left_eye_xs, left_eye_ys);

  int left_eye_pupil_xs[] = {5, 5, 7, 7};
  int left_eye_pupil_ys[] = {4, 6, 6, 4};
  plot_pattern(left_eye_pupil_xs, left_eye_pupil_ys);

  int rigth_eye_xs[] = {9, 9, 8, 8, 9, 9, 11, 11, 12, 12, 11, 11};
  int right_eye_ys[] = {3, 4, 4, 7, 7, 8,  8,  7,  7,  4,  4,  3};
  plot_pattern(rigth_eye_xs, right_eye_ys);

  int right_eye_pupil_xs[] = {10, 10, 12, 12};
  int right_eye_pupil_ys[] = {4, 6, 6, 4};
  plot_pattern(right_eye_pupil_xs, right_eye_pupil_ys);
}

void plot_star_lines() {
  int body_xs[] = {6, 6, 5, 5, 4, 4, 0, 0, 1, 1, 2, 2, 3,  3,  2,  2,  1,  1,  3,  3,  4,  4,  6,  6,  8,  8, 10, 10, 11, 11, 13, 13, 12, 12, 11, 11, 12, 12, 13, 13, 14, 14, 10, 10, 9, 9, 8, 8};
  int body_ys[] = {0, 2, 2, 4, 4, 5, 5, 7, 7, 8, 8, 9, 9, 11, 11, 14, 14, 16, 16, 15, 15, 14, 14, 13, 13, 14, 14, 15, 15, 16, 16, 14, 14, 11, 11,  9,  9,  8,  8,  7,  7,  5,  5,  4, 4, 2, 2, 0};

  plot_pattern(body_xs, body_ys);

  int left_eye_xs[] = {5, 5, 6, 6};
  int left_eye_ys[] = {6, 8, 8, 6};

  plot_pattern(left_eye_xs, left_eye_ys);

  int rigth_eye_xs[] = {8, 8, 9, 9};
  int right_eye_ys[] = {6, 8, 8, 6};

  plot_pattern(rigth_eye_xs, right_eye_ys);
}

void plot_note_lines() {
  int xs[] = {3, 3, 1, 1, 0, 0, 1, 1, 3, 3, 4, 4, 5, 5, 6, 6, 5, 5};
  int ys[] = {0, 4, 4, 5, 5, 7, 7, 8, 8, 7, 7, 2, 2, 3, 3, 1, 1, 0};

  plot_pattern(xs, ys);

}

void plot_grid_lines() {

  PrintSettings print_settings = get_print_settings();
  int width = print_settings.width * print_settings.points_per_lego_unit;
  int height = print_settings.height * print_settings.points_per_lego_unit;
  int x = 0;
  while(x <= width) {
    goto_position(x, 0);
    pen_down();
    print_line(x, height);

    pen_up();
    x= x + 1;
  }

  goto_position(0, 0);
  int y = 0;
  while(y <= height)
  {
    goto_position(0, y);
    pen_down();
    print_line(width, y);

    pen_up();
    y= y + 1;
  }
  pen_up();
}

sub plot_grid() {
 PrintSettings print_settings = get_print_settings();

 short x = 0;
 while (x < print_settings.width * print_settings.points_per_lego_unit)
 {
  short y = 0;
  while( y < print_settings.height * print_settings.points_per_lego_unit) {
   print_point(x, y);
   y += 1;
  }
  x += 1;
 }

}

sub plot_rectangle() {
  PrintSettings print_settings = get_print_settings();

  int xs[];
  ArrayInit(xs, 0, 4);
  int ys[];
  ArrayInit(ys, 0, 4);

  xs[2] = print_settings.width - 1;
  xs[3] = print_settings.width - 1;

  ys[1] = print_settings.height - 1;
  ys[2] = print_settings.height - 1;
  plot_pattern(xs, ys);
}

void plot_mona_lisa() {
    //parse_path("M0,0V12H8.4v-8.4z");
    //parse_path("M10.1381520881,0.0C7.76736191759,0.0,6.96799368235,2.1041947322,6.96799368235,2.1041947322S6.16960096623,0.0,3.79783527663,0.0C1.42774190551,0.0,0.0,2.25958099131,0.0,4.12198634273c0.0,3.1211037302,6.96799368235,7.87801365727,6.96799368235,7.87801365727s6.96799368235,-4.75579504808,6.96799368235,-7.87745621777C13.9359873647,2.25958099131,12.5089422586,0.0,10.1381520881,0.0");
    //parse_path("M2.29,2.83c0.01,-0.02,0.02,-0.04,0.01,-0.06c-0.03,-0.27,-0.49,-0.57,-0.81,-0.19c-0.08,0.09,0.06,0.21,0.14,0.12c0.11,-0.14,0.26,-0.16,0.40,-0.05c-0.10,-0.02,-0.30,-0.03,-0.45,0.17c-0.03,0.04,-0.02,0.11,0.03,0.14c0.29,0.15,0.43,0.11,0.62,0.01C2.23,2.96,2.34,2.92,2.29,2.83zM1.82,2.84c0.07,-0.03,0.16,-0.03,0.23,0.00C1.98,2.87,1.91,2.87,1.82,2.84zM7.39,7.50c-0.94,-0.86,-1.38,-2.59,-1.54,-3.91c-0.06,-0.44,-0.10,-0.85,-0.13,-1.19C5.60,1.01,4.59,0.00,3.33,0.00c-0.99,0.00,-1.85,0.66,-2.08,1.52c-0.57,0.49,-0.65,1.11,-0.47,1.41c-0.31,0.88,-0.31,1.96,0.21,2.96c-0.09,0.57,-0.23,1.07,-0.44,1.42c-0.19,0.10,-0.36,0.23,-0.52,0.37c-0.10,0.09,0.04,0.20,0.12,0.13c0.25,-0.23,0.55,-0.41,0.87,-0.53c-0.23,0.29,-0.42,0.60,-0.57,0.93c-0.05,0.11,0.12,0.18,0.16,0.07c0.05,-0.11,0.11,-0.22,0.17,-0.33c0.20,0.72,1.69,1.07,2.98,1.03h0.00c0.00,0.00,0.00,0.00,0.00,0.00c0.03,-0.00,0.05,-0.01,0.06,-0.03c1.14,-1.10,2.69,-1.75,3.46,-1.32C7.38,7.73,7.48,7.57,7.39,7.50zM2.89,0.23c1.29,-0.29,2.60,0.70,2.68,2.45C4.83,1.16,3.10,0.87,2.57,0.84C2.60,0.64,2.70,0.38,2.89,0.23zM2.83,1.04c-0.11,-0.00,-0.50,-0.02,-0.75,0.04C2.23,1.04,2.45,0.98,2.83,1.04zM2.57,0.33c-0.10,0.17,-0.16,0.36,-0.17,0.51c-0.30,0.03,-0.58,0.13,-0.77,0.29C1.83,0.78,2.17,0.50,2.57,0.33zM0.96,2.95c0.01,-0.03,-0.00,-0.07,-0.01,-0.09c-0.09,-0.11,-0.13,-0.59,0.29,-1.07c-0.02,0.20,-0.04,2.62,-0.20,3.78C0.67,4.71,0.66,3.77,0.96,2.95zM0.82,7.17c0.37,-0.81,0.49,-2.11,0.53,-3.40c0.17,0.90,0.62,1.53,1.10,1.72c0.01,0.23,0.05,0.44,0.10,0.58c-0.48,0.21,-0.93,0.54,-1.31,0.95C1.10,7.07,0.96,7.12,0.82,7.17zM4.24,8.37c-0.18,0.14,-0.36,0.29,-0.52,0.45c-0.79,0.00,-1.24,-0.07,-1.66,-0.18c0.02,-0.03,0.06,-0.06,0.11,-0.08c0.11,-0.05,0.04,-0.21,-0.07,-0.16c-0.12,0.05,-0.18,0.13,-0.22,0.20c-0.57,-0.18,-0.94,-0.46,-0.94,-0.76c0.00,-0.37,1.03,-1.33,1.67,-1.58c0.05,0.10,0.22,0.04,0.16,-0.08c-0.04,-0.08,-0.12,-0.31,-0.14,-0.63c0.24,0.04,1.14,-0.04,1.92,-0.81c0.08,-0.08,-0.04,-0.21,-0.13,-0.13c-0.38,0.38,-1.05,0.77,-1.67,0.77c-1.22,0.00,-1.58,-2.73,-1.22,-3.85c0.54,-0.45,2.10,-0.34,2.35,-0.08c0.00,0.00,0.00,0.00,0.00,0.00c1.17,1.35,0.58,6.70,0.35,6.92C4.24,8.37,4.24,8.37,4.24,8.37zM4.50,8.18c0.37,-1.35,0.49,-5.44,-0.38,-6.72c0.67,0.36,1.35,1.00,1.54,2.14c0.16,1.25,0.50,2.77,1.32,3.75C6.45,7.24,5.48,7.51,4.50,8.18zM3.84,2.61c-0.02,-0.01,-0.07,-0.04,-0.09,-0.06c-0.62,-0.41,-0.99,0.10,-1.02,0.14c-0.08,0.11,0.08,0.19,0.15,0.11c0.10,-0.13,0.35,-0.37,0.79,-0.08c0.06,0.04,0.11,0.07,0.16,0.07C3.95,2.79,3.96,2.63,3.84,2.61zM2.89,2.81c-0.04,0.05,-0.02,0.11,0.03,0.14c0.36,0.20,0.61,0.03,0.67,0.00c0.05,-0.02,0.07,-0.09,0.03,-0.14C3.44,2.58,3.08,2.58,2.89,2.81zM3.14,2.84c0.08,-0.03,0.17,-0.03,0.25,0.00C3.32,2.87,3.24,2.87,3.14,2.84zM3.03,4.30c-0.22,0.07,-0.34,-0.05,-0.58,0.05c-0.08,0.00,-0.15,-0.08,-0.34,-0.04c-0.12,0.01,-0.11,0.18,0.01,0.18c0.03,0.00,0.06,-0.01,0.10,-0.01c0.05,0.00,0.15,0.05,0.25,0.05c0.04,0.00,0.11,-0.04,0.17,-0.04c0.03,0.00,0.13,0.01,0.12,0.02c-0.16,0.05,-0.37,0.04,-0.45,0.01c-0.11,-0.05,-0.18,0.11,-0.08,0.16c0.13,0.06,0.39,0.06,0.58,0.00c0.08,-0.03,0.09,-0.16,-0.01,-0.17c0.10,0.01,0.22,0.01,0.31,-0.03C3.21,4.42,3.14,4.26,3.03,4.30zM2.13,3.59l-0.07,0.27c-0.01,0.05,0.01,0.13,0.09,0.13c0.21,0.33,0.56,0.01,0.59,0.02c0.09,0.08,0.21,-0.06,0.12,-0.13c-0.11,-0.10,-0.22,-0.03,-0.29,0.02c-0.25,0.15,-0.23,0.01,-0.31,-0.04l0.05,-0.22C2.33,3.51,2.16,3.47,2.13,3.59");
    //parse_path("M0,0m30.50,0v5.77c-0.58,-0.24,-1.34,-0.16,-2.00,0.20c-1.01,0.56,-1.47,1.62,-1.02,2.36c0.44,0.74,1.62,0.89,2.63,0.33c0.71,-0.39,1.17,-1.05,1.19,-1.69c0.01,-1.67,0.00,-3.29,0.00,-4.97c1.46,0.00,2.32,0.57,2.00,2.00c-0.18,0.73,-0.55,1.37,-1.00,1.82c1.20,-0.67,2.00,-1.75,2.00,-2.82c0.00,-1.00,-0.97,-1.60,-1.80,-2.00c-0.43,-0.20,-1.00,-0.50,-1.20,-1.00h-0.81");
    //parse_path("M7.80,0.92l-0.58,0.58c-0.94,-0.42,-2.17,-0.18,-2.64,1.05c-0.96,-2.48,-4.98,-0.93,-3.56,1.92c0.31,0.62,0.91,1.17,1.54,1.69l-0.38,0.38l-1.41,0.02c-0.08,0.00,-0.15,0.07,-0.15,0.15c0.00,0.08,0.07,0.14,0.15,0.15l1.10,-0.02l-0.32,0.32L0.15,7.19C0.06,7.19,-0.00,7.26,0.00,7.34c0.00,0.08,0.07,0.15,0.15,0.15c0.00,0.00,0.00,0.00,0.00,0.00l1.10,-0.02l-0.49,0.49l0.28,0.28l0.49,-0.49l-0.02,1.10c-0.00,0.08,0.06,0.15,0.15,0.15c0.00,0.00,0.00,0.00,0.00,0.00c0.08,0.00,0.15,-0.06,0.15,-0.15l0.02,-1.41l0.32,-0.32l-0.02,1.10c-0.00,0.08,0.06,0.15,0.15,0.15c0.00,0.00,0.00,0.00,0.00,0.00c0.08,0.00,0.15,-0.06,0.15,-0.15l0.02,-1.41l0.41,-0.41c0.76,0.62,1.49,1.21,1.72,1.85c0.00,0.00,0.00,0.00,0.00,0.00c0.46,-1.25,2.82,-2.32,3.56,-3.79c0.63,-1.25,0.20,-2.26,-0.56,-2.77l0.50,-0.50l0.41,0.83L9.00,0.00l-2.02,0.51L7.80,0.92");
    draw_path("M72.748,0C55.736,0,50,15.099,50,15.099S44.271,0,27.252,0C10.245,0,0,16.214,0,29.578c0,22.396,50,56.53,50,56.53s50-34.126,50-56.526C100,16.214,89.76,0,72.748,0z");
}
#endif
