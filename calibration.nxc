#ifndef CALIBRATION_NXC
#define CALIBRATION_NXC

#include "pen.nxc"
#include "move.nxc"

inline bool is_stalled(byte output)
{
 long t0 = CurrentTick();
 long previousCount = MotorTachoCount(output);
 while(CurrentTick() < t0 + 100) {
  Wait(10);
  long count = MotorTachoCount(output);
  short stallThreshold = 2;
  if (abs(count - previousCount) >= stallThreshold)
  {
   return false;
  }
  previousCount = count;
 }
 return true;
}

inline void calibrate_motor(byte output) {
 PrintSettings print_settings = get_print_settings();

 OnRev(output, print_settings.calibration_speed);
 until (is_stalled(output));
 Off(output);
 long initialCount = MotorRotationCount(output);
 Wait(100);
 OnFwd(output, print_settings.calibration_speed);
 until (is_stalled(output));
 Off(output);
 long finalCount = MotorRotationCount(output);
 Wait(100);
 RotateMotorEx(output, -print_settings.calibration_speed, (finalCount - initialCount) / 2, 0, false, true);
 Wait(100);
}

void calibrate_pen() {
  OnRev(OUT_C, PEN_SPEED);
  until(SensorBoolean(S1));
  Off(OUT_C);
}

void calibrate() {
  calibrate_pen();
  calibrate_motor(OUT_A);
  calibrate_motor(OUT_B);
  ALPHA = 0;
  BETA = 0;
}

string CALIBRATION_FILE = "calibrated";

bool calibration_file_exists() {
  ListFilesType args;
  args.Pattern = CALIBRATION_FILE;
  SysListFiles(args);
  return (args.Result == NO_ERR && ArrayLen(args.FileList) > 0);
}

void init() {
 SetSensorTouch(IN_1);
  if (calibration_file_exists()) {
    DeleteFile(CALIBRATION_FILE);
  } else {
    calibrate();
  }
}

void shutdown() {
  move_motors(-ALPHA, -BETA);
  pen_up();
  byte handle;
  CreateFile("calibrated", 1, handle);
  wait_system_to_be_ready_for_move();
  StopAllTasks();
}

#endif
